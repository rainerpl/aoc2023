
let beams = [];
let nrRows;
let nrCols;
const processInput = async () => {
    let i;
    //const res = await fetch('https://adventofcode.com/2023/day/16/input');
    //let input = await res.text();
    const input = `\\..................-...|..............................|./................-.....................\\.../..........
.-....../.....-..........|..-.........................|............/.......................\\....\\......-......
........|...\\..............|/.........|...../...............................\\../............../...............
...................-.............-.|......-................\\........-...............-....\\..../\\....|..\\......
.............|............\\....................../..........\\..../\\...........................................
..............................|.............../..|......-......./........|..............................|..-.\\
..............-............/|...\\..\\./.\\............./.............-.......\\............./../............-....
.........................................|.........../................................/..........|......|../..
......|.........\\..\\..............................|.....-\\.-.\\...........|...............-....-....\\..........
...........................\\\\....|......|..............|....-../.....\\|....|\\........../..-...................
...........-..../.|.......-|...-.......................|.......-.|..../........................\\/.............
.....................-.............\\.............../............................................\\\\............
......-..........-.-..|...........|...........................\\...............................|...........|...
................--...\\........\\.................../................................../............-...........
...............|../............/...../......./..\\............|..../-...........|..................\\.-.........
|....................|-.\\...........\\...\\.............................................../................\\....
\\.|................\\.\\...................\\....-./....\\......../...................-.....................-.....
...................................................|........../......\\.................|..\\.............../...
................/.............|......|...........-......................|...-.................../../..|.....-.
.................|-..|.........................-............\\....-./......-......../............/.....|.......
.....|.........-.....-.....-................/\\..........-........|...\\../..|.......-.........-...........-....
......................./.........../........|............\\............../........./.....\\....-/...............
/........./.......|........|..../../........|............................\\........./-..-..............|.....|.
...........|.........-/........-...|/.............................-....|.....\\........................|.......
.|..\\............/.-..........\\........-.............../.......\\...........\\..............\\../-..-|.|-........
..\\-|.......................\\.......\\.\\.....\\............-...../.......-....../.............................-.
.-........................|........../.....................................-....\\.............................
..../.............-.................\\.|........................./............/.|..../../................\\-....
........../-................./........|......-../........|..-........./........./...........\\............\\....
......../.......................\\..-............-...................\\.....................\\/........\\...../...
....../....|..........-.....-/.................-...\\..........................................................
/.........\\.............-....|.-..\\...../../......./|............................................./...../.....
.......-..|............./.............../|....../..................\\....--..-./............./............./..-
-...........|............/.........-..|..................../....................../...........|...\\\\..........
/...-........../....................................|.......-.....|............|........././..\\...............
....................../....\\........|.....|....\\.......-............|\\....\\../.....--.....-.|.................
..../........-.....\\........\\.....\\...............|/..................|........./...-......|.................|
.......................-.......//..................|...........|-....-..-...........-.......-....\\...../....\\.
..................-..../......./-............/.../...\\...\\../............\\\\.|.................................
........../.........|...-..........--....................../.......................-......../......\\..........
..|........../...........|............./...............|........-....\\.....\\...............-.....-....../.-...
...../.-..|\\...|...............................-...|....\\......|.............../.\\............\\............\\..
................\\/.....|..........\\.................../........\\./...................-........................
.........\\...../..|............|...............|.-.....................\\....\\\\.|........../.......|...........
......................\\\\..../.....\\.....\\..........|....................\\.....................................
.\\......./............-\\........../.........-...../....../....-..............-........................\\.....|.
...........\\.......-.....\\...\\/.......-..............-...........\\...................../.................\\....
............-.../.....|..............-.............|......|.......|..|.............../...|.....\\..............
................-..................\\..|............./.................\\....|..//.......|.../..................
........|.../...|....../...\\....................../....-...............-........|..........................|..
..|...../..............................-............|..........-........|.........../..|..|...................
.....-..........-.....-.........................................|.........\\....-.....\\...........-..../...|...
.-.-........../.................../...........-................|..-............../..-..-......................
/-\\.........................-|.........-......|....|-...........-...................................-...\\.....
...\\.........|.............././...........|./.................-........\\.........\\.../|........./....\\\\.......
..|.................-......\\./....||.........\\....|..........-......|.................\\..........\\.....-../...
......../.|................................../...................|..\\\\.....--...................-..|..........
.-........-......./...\\....|....../..........-./......./..|................\\/......../......../....../........
...-....../.|........./.............\\.....|../.-./.......................-....|.........\\......|/..........|..
.....|................//.\\......|.\\/.................................|-...//........./...-.-............\\.....
.............../...............\\..-....................-..../........../....-...............|-.......\\../...\\.
..|......\\........./../..................|....|................|\\.|....\\....-.|.......-../......||.-.|....\\./.
......|./.................\\............|.......................\\........-.....-...../..........\\......-.../..|
.....|.\\....\\..............-......-./......./......................../............|..............|............
..............................\\..................../................|.................-......./.........../...
.......-.....-..........\\..-...../.....\\.\\..............\\..\\....../.|.../...............-..................\\..
.................|..................-.\\....................................\\.....-............................
...-.......|........-....-.......-....-..........-.-..\\.......................................\\.-.../......../
.............-......\\................-.....-.....-/......./...\\\\../.................\\....-......./..-.....-|..
....\\.............|..-......./-......|............\\.........-........\\..../...\\.......|.|..-...\\..............
.....................-....................................../.......\\....\\........................../\\..../\\..
........-............\\....\\./...........\\.-........./........./..\\.........................../....-..|......|.
..................../.........../.\\..............-............\\.........\\/...\\..................-.............
.-...\\......\\.............................................................-.............\\.\\.-......|..........
................|..............|.-........../......\\.............|............./.|..-|..........|.............
...-........../....\\.../.../.........................................................../.........|.-......-...
..-....................-..........................|..../.......|........|../......./....../...-......../....-.
........\\............................-.......\\...../\\......|\\......-............./.........-..................
...../...../|..............|.-.....\\....-/...........\\...............\\.\\.......................-.-............
......\\.......\\.....................|................................\\.....\\..............................\\./.
\\...............................-.............-../-............................./...............\\.|...........
......|......|................-|..-....\\/....\\...................-...........|...../....................\\\\....
.............../..............-...|....................\\\\..............-....\\..........\\...............|....|.
...\\.-.......|..-/...................../|............\\......-.../...................../.......................
........../........./.........-....\\........................|./......./..............-...-....................
....-|-..............\\.......................\\.................|.......\\.........../..........-......./.......
..-...........................|\\.................\\................/\\................................../.|.....
......\\.................................|........\\./............-..............\\..........-.........../..-....
................-..........|.............|.....|....................-..........\\......|-\\....|...........-....
...|.........../\\............./.........\\........\\....................|...........................-.\\.........
../.|...................././......-..............-\\.....-........-.|...........\\......-./..-..................
......\\.......-..-..............................-................|.................../........................
..\\..-................/..-....-........./..........................-.../...........................-..........
............./-./.\\........./....-....................././.....|............-...............|./...........-|..
...................-...\\.....\\....................../............--....................../...........\\........
.............-.....\\......\\./........................../.....................-...................\\.........-|.
.....\\.........\\.../......................\\..................|.............................\\.|........./.....|
.....\\.....\\./..............-............../..............\\.......|........../..//.-...-.\\......../.........\\.
..............\\...\\..........................\\...\\./.-...|.........|.......|..\\../.........................|..
.\\..|......\\.\\\\.........../....../....../......./................../..|................/....|.................
./|............./...................................\\.-....\\..\\|./.-.............................\\.......\\....
\\./........./.....\\............................/.../...\\....................|..............|.|............/|..
..\\............\\............\\.....-..........\\.......|../.|......./|......-...--...-..\\......|./.-......-.....
...............\\........|............\\|....|..\\.......-................/.........|....\\-.|.|..../-.......|....
...................|/.............|............/................|..|.\\.|.........|...\\........................
..................|../..../.......-................................-......................-.........|.......\\.
...............\\...../......\\./...../............/...........-..........\\....../.....\\.....\\......|...........
../........\\.....|..................\\......./.......-../.......\\.../.|....................................|...
.|.|..\\....\\.|./.../........................./........-..\\.../.............\\.............................|....
..................|...\\................-..-/..................-...|./..................-..|...................`;
    const rows = input
        .split(/\n/gi)
        .filter(v => v);
    const grid = {};
    rows.forEach((row, rowIndex) => {
        nrRows = rowIndex + 1;
        row.split('').forEach((symbol, colIndex) => {
            nrCols = colIndex + 1;
            grid[colIndex + ':' + rowIndex] = {symbol, energized: false};
        });
    });
    return grid;
}
let cache = {};
const getAnswer = async () => {
    const grid = await processInput();
    // ToDo: each splitter can be hit once, and mirror twice.
    const propagateBeam = (beam) => {
        // pushes a single beam forward
        beam.pos.x += beam.dir.x;
        beam.pos.y += beam.dir.y;

        const gridKey = beam.pos.x + ':' + beam.pos.y;
        const tile = grid[gridKey];
        if (tile) {
            tile.energized = true;
            if (tile.symbol === '.') {
                // tile gets energized and beam keeps going.
                // not caching empty space since it won't change beam behavior
                return true;
            }
            if (beam.dir.x !== 0 && beam.dir.y !== 0) {
                throw new Error('Beam direction is messed up');
            }
            let newBeam;
            if (tile.symbol === '/' && beam.dir.x !== 0) {
                beam.dir.y = -beam.dir.x;
                beam.dir.x = 0;
            } else if (tile.symbol === '\\' && beam.dir.x !== 0) {
                beam.dir.y = beam.dir.x;
                beam.dir.x = 0;
            } else if (tile.symbol === '\\' && beam.dir.y !== 0) {
                beam.dir.x = beam.dir.y;
                beam.dir.y = 0;
            } else if (tile.symbol === '/' && beam.dir.y !== 0) {
                beam.dir.x = -beam.dir.y;
                beam.dir.y = 0;
            } else if (tile.symbol === '|' && beam.dir.x !== 0) {
                beam.dir.y = -1;
                beam.dir.x = 0;
                newBeam = {dir: {...beam.dir}, pos: {...beam.pos}};
                newBeam.dir.y = 1;
                beams.push(newBeam);
            } else if (tile.symbol === '-' && beam.dir.y !== 0) {
                beam.dir.y = 0;
                beam.dir.x = -1;
                newBeam = {dir: {...beam.dir}, pos: {...beam.pos}};
                newBeam.dir.x = 1;
                beams.push(newBeam);
            }
            const cacheKey = gridKey + '(' + beam.dir.x + ',' + beam.dir.y + ')';
            if (cache[cacheKey]) {
                // We are in a loop, kill the beam.
                const beamIndex = beams.indexOf(beam);
                beams.splice(beamIndex, 1);
                return false;
            }
            cache[cacheKey] = true;
            return true;
        }
        // Went off map. Beam is done.
        const beamIndex = beams.indexOf(beam);
        beams.splice(beamIndex, 1);
        return false;
    }
    const propagateBeams = () => {
        // pushes all the beams forward by 1 step
        let i;
        for (i = 0; i < beams.length; i++) {
            const beam = beams[i];
            const res = propagateBeam(beam);
            if (res === false) {
                // beam was killed and array was shortened
                i--;
            }
        }
    }
    const getVisual = () => {
        let rows = [];
        for (let rowNr = 0; rowNr < nrRows; rowNr++) {
            const row = [];
            for (let colNr = 0; colNr < nrCols; colNr++) {
                const tile = grid[colNr + ':' + rowNr];
                row.push(tile.energized && !['/', '-', '|', '\\'].includes(tile.symbol) ? '*' : tile.symbol === '.' ? 'x' : tile.symbol);
            }
            rows.push(row);
        }
        return rows;
    }
    const startingPositions = [];
    let i;
    for (i = 0; i < nrCols; i++) {
        // top edge
        startingPositions.push({pos: {x: i, y: -1}, dir: {x: 0, y: 1}});
        // bottom edge
        startingPositions.push({pos: {x: i, y: nrRows + 1}, dir: {x: 0, y: -1}});
    }
    for (i = 0; i < nrRows; i++) {
        // left
        startingPositions.push({pos: {x: -1, y: i}, dir: {x: 1, y: 0}});
        // right
        startingPositions.push({pos: {x: nrCols + 1, y: 0}, dir: {x: -1, y: 0}});
    }
    const getEnergizedTiles = (startingPos, startingDir) => {
        cache = {};
        beams = [];
        const beam = {
            dir: startingDir,
            pos: startingPos,
        };
        beams.push(beam);
        // reset grid
        Object.values(grid).forEach((tile) => {
            tile.energized = false;
        });
        let killSwitch = 1020000000;
        while (killSwitch > 0) {
            killSwitch--;
            propagateBeams();
            if (beams.length === 0) {
                break;
            }
            /*
            const res = getVisual();
            if (res) {

            }*/
        }
        if (killSwitch < 1) {
            throw new Error('More brute force needed ?');
        }
        return Object.values(grid).filter(tile => tile.energized).length;
    }
    const results = startingPositions.map((startingPosition) => {
        return getEnergizedTiles(startingPosition.pos, startingPosition.dir);
    });
    let maxVal = 0;
    results.forEach((value) => {
        if (maxVal < value) {
            maxVal = value;
        }
    })
    console.log('Answer:', maxVal);

}
getAnswer();
// 68 not right
